package gen

const templateControllerContent = `
// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package {TplPackageName}

{TplPackageImports}
// Fill with you ideas below.

//列表分页数据
func List(r *ghttp.Request) {
	var req *{TplPackageName}.SelectPageReq
	//获取参数
	if err := r.Parse(&req); err != nil {
		response.ErrorResp(r).SetMsg(err.Error()).WriteJsonExit()

	}
	rows := make([]{TplPackageName}.Entity, 0)
	result, page, err := {TplPackageName}.SelectListByPage(req)

	if err == nil && len(result)>0 {
		rows = result
	}
	response.SucessResp(r).SetData(g.Map{
	"rows":rows,
	"pager":page,
		
	}).WriteJsonExit()
}


//新增页面保存
func Create(r *ghttp.Request) {
	var req *{TplPackageName}.AddReq
	//获取参数
	if err := r.Parse(&req); err != nil {
		response.ErrorResp(r).SetMsg(err.Error()).WriteJsonExit()
	}

	response.SucessResp(r).SetData(g.Map{}).WriteJsonExit()
	
}


//修改数据
func Edit(r *ghttp.Request)  {

	var req *{TplPackageName}.EditReq
	//获取参数
	if err := r.Parse(&req); err != nil {
		response.ErrorResp(r).SetMsg(err.Error()).WriteJsonExit()
	}

	response.SucessResp(r).SetData(g.Map{}).WriteJsonExit()
}


//删除数据
func Delete(r *ghttp.Request) {
	var req *{TplPackageName}.DeleteReq
	//获取参数
	if err := r.Parse(&req); err != nil {
		response.ErrorResp(r).SetMsg(err.Error()).WriteJsonExit()
	}

	response.SucessResp(r).SetData(g.Map{}).WriteJsonExit()
}



`
